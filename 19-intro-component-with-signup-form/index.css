@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');

:root {
    --font-family: "Poppins", sans-serif;
    --font-weight-normal: 400;
    --font-weight-bold: 500;
    --font-weight-bolder: 600;
    --font-weight-boldest: 700;
    --font-size: 16px;
    --color-red: hsl(0, 100%, 74%);
    --color-green: hsl(154, 59%, 51%);
    --color-blue: hsl(248, 32%, 49%);
    --color-dark-blue: hsl(249, 10%, 26%);
    --color-grayish-blue: hsl(246, 25%, 77%);
    --img-bg-desktop: url("./images/bg-intro-desktop.png");
    --img-bg-mobile: url("./images/bg-intro-mobile.png");
    --icon-error: url("./images/icon-error.svg");
    --icon-success: url("./images/icon-success.svg");
    --slight-borders: calc(16px * 0.4);
}

* {
    margin: 0;
    padding: 0;
    border: 0;
    outline: none;
    background: none;
    text-decoration: none;
    box-sizing: border-box;
    font-family: var(--font-family);
    font-size: var(--font-size);
    font-weight: var(--font-weight-normal);
}

html {
    width: 100%;
    height: 100%;
}

body {
    width: 100%;
    height: 100%;
    background-color: var(--color-red);
    background-image: var(--img-bg-desktop);
    display: flex;
    justify-content: center;
    align-items: center;
}


/******************/
/* MAIN CONTAINER */
/******************/

.container {
    width: 90%;
    max-width: 1250px;
    height: auto;
    display: flex;
    flex-direction: row;
    padding: 32px;
}

/*******************/
/* TITLE CONTAINER */
/*******************/

section.title-container {
    flex: 1 1 50%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: calc(var(--font-size) * 2);
    padding: 0 calc(var(--font-size) * 3);
}

.title {
    font-size: calc(var(--font-size) * 2.5);
    font-weight: var(--font-weight-boldest);
    line-height: calc(var(--font-size) * 3);
    color: white;
}

.title + p.message {
    color: white;
}


/******************/
/* FORM CONTAINER */
/******************/

section.form-container {
    flex: 1 1 50%;
    display: flex;
    flex-direction: column;
    gap: var(--font-size);
}

.btn.outside {
    background: var(--color-blue);
    padding: var(--font-size);
    border-radius: var(--slight-borders);
    width: 100%;
    color: white;
}

form {
    background: white;
    padding: calc(var(--font-size) * 1.80);
    display: flex;
    flex-direction: column;
    gap: var(--font-size);
    border-radius: var(--slight-borders);
}

label {
    position: relative;
}

form input {
    width: 100%;
    padding: var(--font-size) calc(var(--font-size) * 1.2);
    border: 2px solid var(--color-grayish-blue);
    border-radius: var(--slight-borders);
    opacity: 0.8;
    color: black;
    font-weight: normal;
}

form input::placeholder {
    color: var(--color-dark-blue);
    font-weight: normal;
}

form input:focus {
    border: 4px solid var(--color-grayish-blue);
    opacity: 1;
}

/* -->> START BELOW | All Form Input Validation Styling Below */

label[class*="notify-"]::before {
    content: var(--icon-error);
    width: 100%;
    height: 100%;
    position: absolute;
    right: 0;
    bottom: 0;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    padding-right: var(--font-size);
}

label.notify-error::before {
    content: var(--icon-error);
}

label.notify-success::before {
    content: var(--icon-success);
}

label.notify-error::after {
    content: "";
    width: 100%;
    height: 65%;
    position: absolute;
    bottom: -65%;
    right: 0;
    /* border: 3px solid red; */
    /* text-align: right; */
    color: var(--color-red);
    display: flex;
    justify-content: flex-end;
    align-items: center;
    padding-right: 12px;
    font-style: italic;
}

/* label:not(.notify-error):not(.notify-success)::after {
    display: none;
} */

/* NOTE: Cannot dynamically manipulate/update pseudo element content string from JS */
label[for="firstname"].field-empty::after {
    content: "First Name cannot be empty"
}
label[for="lastname"].field-empty::after {
    content: "Last Name cannot be empty"
}
label[for="email"].field-empty::after {
    content: "Email cannot be empty";
}
label[for="password"].field-empty::after {
    content: "Password cannot be empty"
}
label[for="email"].field-email-invalid::after {
    content: "Looks like this is not an email";
}

label.notify-error input {
    border: 4px solid var(--color-red);
    border-radius: var(--slight-borders);
}

label.notify-success input {
    border: 4px solid var(--color-green);
    border-radius: var(--slight-borders);
}

/* <<-- ENDS ABOVE | All Form Input Validation Styling Above */


.btn.inside {
    background: var(--color-green);
    color: white;
    text-transform: uppercase;
    padding: var(--font-size) calc(var(--font-size) * 1.2);
    border-radius: var(--slight-borders);
}

.btn.inside:hover {
    filter: brightness(110%);
    cursor: pointer;
}

.btn.inside:active {
    opacity: 0.9;
    box-shadow: 0 calc(var(--font-size) / 4) hsl(154, 59%, 41%);
}

form .terms {
    color: var(--color-grayish-blue);
    text-align: center;
}

form .terms span {
    color: var(--color-red);
}


/*****************/
/* SHARED STYLES */
/*****************/

.bold {
    font-weight: var(--font-weight-bold)
}

.bolder {
    font-weight: var(--font-weight-bolder)
}

/*****************/
/* MEDIA QUERIES */
/*****************/

@media only screen and (max-width: 940px) {
    .container {
        width: 100%;
        padding: var(--font-size);

    }
    section.title-container {
        padding-left: calc(var(--font-size) * 0.5)
    }
}

@media only screen and (max-width: 768px) {
    html {
        height: unset;
        padding: calc(var(--font-size) * 4) calc(var(--font-size) * .75);
    }
    .container {
        flex-direction: column;
        width: 375px;
        gap: calc(var(--font-size) * 4);
    }

    /*****************************/
    /* TITLE CONTAINER  - @768px */
    /*****************************/
    section.title-container {
        gap: calc(var(--font-size) * 1);
        padding: 0;
    }
    section .title {
        text-align: center;
        font-size: calc(var(--font-size) * 2);
        font-weight: var(--font-weight-boldest);
        line-height: calc(var(--font-size) * 2.5);
        width: 100%;
    }
    .title-container  p {
        text-align: center;
    }

    /****************************/
    /* FORM CONTAINER  - @768px */
    /****************************/
    .btn.outside {
        padding: calc(var(--font-size) * 1.25) calc(var(--font-size) * 2.5);
        line-height: calc(var(--font-size) * 1.75);
    }
    form {
        padding: calc(var(--font-size) * 1.3);
    }
    form input {
        border: 1px solid var(--color-grayish-blue);
    }
    form input:focus {
        border: 2px solid var(--color-grayish-blue);
    }
    .btn.inside:active {
        opacity: 0.9;
        box-shadow: 0 calc(var(--font-size) / 8) hsl(154, 59%, 41%);
    }
    form .terms {
        font-size: calc(var(--font-size) * 0.75);
        padding: 0 5px;
    }
    form .terms span {
        font-size: inherit;
    }
}


/*********************************************************/
/*                       FOR DEBUGGING                   */
/*********************************************************/

/* .container {
    border: 4px solid red;
}
section.title-container {
    border: 8px solid orange;
}
section .title {
    border: 5px solid yellow;
}
section.form-container {
    border: 8px solid green;
}
.btn.outside {
    border: 5px solid blue;
}
form input {
    border: 4px solid indigo;
} */

/* @media only screen and (min-width: 941px) {
    body {
        background-color: lightgreen;
    }
}

@media only screen and (max-width: 940px) {
    body {
        background-color: lightsalmon;
    }
}

@media only screen and (max-width: 768px) {
    body {
        background-color: powderblue;
    }
} */
